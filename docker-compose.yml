services:
  # Banco de dados PostgreSQL
  db:
    image: postgres:16-alpine
    container_name: fitway-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: fitway_db
      POSTGRES_USER: fitway_user
      POSTGRES_PASSWORD: fitway_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - fitway-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fitway_user -d fitway_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Laravel API
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: fitway-api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./api/.env.docker
    volumes:
      - ./api:/var/www/html
      - api_vendor:/var/www/html/vendor
      - api_storage:/var/www/html/storage
      - api_bootstrap_cache:/var/www/html/bootstrap/cache
      - ./api/docker/start.sh:/usr/local/bin/start.sh:ro
      - ./api/docker/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf:ro
      - ./api/docker/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8000:80"
    networks:
      - fitway-network

  # Frontend React (build est√°tico)
  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: fitway-frontend
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "3000:80"
    env_file:
      - ./web/.env.docker
    networks:
      - fitway-network
    volumes:
      - ./web/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  # Frontend (Dev) com Vite + HMR
  frontend-dev:
    image: node:20-alpine
    container_name: fitway-frontend-dev
    working_dir: /app
    tty: true
    restart: unless-stopped
    depends_on:
      - api
    environment:
      - CI=false
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - ./web/.env.docker
    volumes:
      - ./web:/app
      - web_node_modules:/app/node_modules
    command:
      - sh
      - -lc
      - npm install && npm run dev -- --host 0.0.0.0 --port 5173
    ports:
      - "5173:5173"
    networks:
      - fitway-network

  # pgAdmin para gerenciar o PostgreSQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fitway-pgadmin
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fitway.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json:ro
    ports:
      - "5050:80"
    networks:
      - fitway-network

volumes:
  postgres_data: {}
  api_vendor: {}
  api_storage: {}
  api_bootstrap_cache: {}
  web_node_modules: {}
  pgadmin_data: {}

networks:
  fitway-network: {}
